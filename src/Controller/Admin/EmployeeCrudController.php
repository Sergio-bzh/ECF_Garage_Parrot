<?php

namespace App\Controller\Admin;

use App\Entity\Employee;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\BooleanField;
use EasyCorp\Bundle\EasyAdminBundle\Field\EmailField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;

class EmployeeCrudController extends AbstractCrudController
{
    private $passwordEncoder;

    public function __construct(UserPasswordHasherInterface $passwordEncoder)
    {
        $this->passwordEncoder = $passwordEncoder;
    }

    public static function getEntityFqcn(): string
    {
        return Employee::class;
    }

    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        $this->encodePassword($entityInstance);
        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function updateEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        $this->encodePassword($entityInstance);
        parent::updateEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    private function encodePassword(Employee $employee): void
    {
        $plainPassword = $employee->getPassword();
        if (!empty($plainPassword)) {
            $encodedPassword = $this->passwordEncoder->hashPassword(
                $employee,
                $plainPassword
            );
            $employee->setPassword($encodedPassword);
        }
    }

    public function configureFields(string $pageName): iterable
    {
//        yield from parent::configureFields(($pageName));
        yield IdField::new('id')->hideOnForm();
        yield EmailField::new('email', 'Courriel');
        yield TextField::new('first_name', 'Prénom');
        yield TextField::new('last_name', 'Nom');
        yield TextField::new('password', 'Mot de passe');
        yield BooleanField::new('is_admin', 'Admin');
        yield AssociationField::new('garage');
        /*
        return [
            IdField::new('id'),
            TextField::new('title'),
            TextEditorField::new('description'),
        ];*/
    }

    public function configureCrud(Crud $crud): Crud
    {
//        return parent::configureCrud($crud); // TODO: Change the autogenerated stub
        return $crud
            ->setEntityLabelInPlural('Employés')
            ->setEntityLabelInSingular('Employé')
            ->setPageTitle('new', 'Ajouter un employé')
            ->setPageTitle('edit', 'Modifier');
    }
}
